@page "/users/add"
@attribute [Authorize]
@inject IAlertService AlertService
@inject IAccountService AccountService
@inject NavigationManager NavigationManager

<h1>Добавить пользователя</h1>
<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-row">
        <div class="form-group col">
            <label>Фамилия</label>
            <InputText @bind-Value="model.LastName" class="form-control" />
            <ValidationMessage For="@(() => model.LastName)" />
        </div>
        <div class="form-group col">
            <label>Имя</label>
            <InputText @bind-Value="model.FirstName" class="form-control" />
            <ValidationMessage For="@(() => model.FirstName)" />
        </div>
        <div class="form-group col">
            <label>Отчество</label>
            <InputText @bind-Value="model.Patronymic" class="form-control" />
            <ValidationMessage For="@(() => model.Patronymic)" />
        </div>


    </div>
    <div class="form-row">
        <div class="form-group col">
            <label>Подразделение</label>
            <InputText @bind-Value="model.Department" class="form-control" />
            <ValidationMessage For="@(() => model.Department)" />
        </div>
        <div class="form-group col">
            <label>Должность</label>
            <InputText @bind-Value="model.Position" class="form-control" />
            <ValidationMessage For="@(() => model.Position)" />
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col">
            <label>Имя пользователя</label>
            <InputText @bind-Value="model.Username" class="form-control" />
            <ValidationMessage For="@(() => model.Username)" />
        </div>
        <div class="form-group col">
            <label>Пароль</label>
            <InputText @bind-Value="model.Password" type="password" class="form-control" />
            <ValidationMessage For="@(() => model.Password)" />
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col">
            <label>Роли</label>
            <InputSelect @bind-Value="model.Roles" class="form-control">
                <option value="white">White</option>
                <option value="red">red</option>


            </InputSelect>

            <ValidationMessage For="@(() => model.Roles)" />
        </div>
    </div>
    <div class="form-group">
        <button disabled="@loading" class="btn btn-primary">
            @if (loading)
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            Сохранить
        </button>
        <NavLink href="users" class="btn btn-link">Отмена</NavLink>
    </div>
</EditForm>

@code {
    private AddUser model = new AddUser();
    private bool loading;

    private async void OnValidSubmit()
    {
        loading = true;
        try
        {
            await AccountService.Register(model);
            AlertService.Success("Пользователь успешно добавлен", keepAfterRouteChange: true);
            NavigationManager.NavigateTo("users");
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
            loading = false;
            StateHasChanged();
        }
    }
}