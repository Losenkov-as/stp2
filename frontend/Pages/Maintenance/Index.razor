@page "/maintenance"
@attribute [Authorize]
@inject IMaintenanceService MaintenanceService
@inject IAccountService AccountService

<h1>Журнал</h1>
<NavLink href="maintenance/add" class="btn btn-sm btn-success mb-2">Новая заявка</NavLink>
<table class="table table-striped table-sm table-responsive table-hover">
    <thead>
        <tr>
            <th scope="col">Номер заявки</th>
            <th scope="col">Дата обслуживания</th>
            <th scope="col">Номер станка</th>
            <th scope="col">Статус станка</th>
            <th scope="col">Местоположение</th>
            <th scope="col">Сотрудник</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @if (maintenances != null)
        {
            foreach (var maintenance in maintenances)
            {
                <tr>
                    <td>@maintenance.Id</td>
                    <td>@maintenance.DateOfUpdate</td>
                    <td>@maintenance.Machine.InventoryNumber</td>
                    <td>@maintenance.Status.Name</td>
                    <td>@maintenance.Location.Build / @maintenance.Location.Room</td>
                    <td>@maintenance.User.Username</td>
                    @*<td>
                        @foreach (Role role in user.Roles)
                        {
                            if (user.Roles.ToArray().Length > 1)
                                @string.Concat(role.Name, ", ")
                                else
                                    @role.Name;
                                }
                    </td>*@

                    <td style="white-space: nowrap">
                        <NavLink href="@($"maintenances/edit/{maintenance.Id}")" class="btn btn-sm btn-primary mr-1">Редактировать</NavLink>
                        <button @onclick="@(() => DeleteMaintenance(maintenance.Id))" disabled="@maintenance.IsDeleting" class="btn btn-sm btn-danger ">
                            @if (maintenance.IsDeleting)
                            {
                                <span class="spinner-border spinner-border-sm"></span>
                            }
                            else
                            {
                                <span>Удалить</span>
                            }
                        </button>
                    </td>
                </tr>
            }
        }
        @if (loading)
        {
            <tr>
                <td colspan="4" class="text-center">
                    <span class="spinner-border spinner-border-lg align-center"></span>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private bool loading;
    private IList<Maintenance> maintenances;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        maintenances = await MaintenanceService.GetAll();
        loading = false;
    }

    private async void DeleteMaintenance(string id)
    {
        var maintenance = maintenances.First(x => x.Id == id);
        maintenance.IsDeleting = true;
        await MaintenanceService.Delete(id);
        maintenances.Remove(maintenance);
        StateHasChanged();
    }
}